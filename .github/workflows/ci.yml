name: Build and Test Folly

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-folly:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            cmake \
            make \
            gcc \
            g++ \
            autoconf \
            automake \
            libtool \
            python3-pip \
            ninja-build \
            libgflags-dev \
            libboost-all-dev \
            libdouble-conversion-dev \
            libevent-dev \
            libgflags-dev \
            libgoogle-glog-dev \
            libssl-dev \
            libunwind-dev \
            liblz4-dev \
            liblzma-dev \
            zlib1g-dev \
            libsnappy-dev \
            binutils-dev \
            libjemalloc-dev \
            libiberty-dev \
      
      - name: Build fmt
        run: |
          git clone https://github.com/fmtlib/fmt.git && cd fmt
          rm _build -rf; mkdir _build -p && cd _build
          # -DCMAKE_INSTALL_PREFIX=/usr/local/
          cmake .. -DBUILD_SHARED_LIBS=TRUE -DFMT_TEST=OFF
          make -j$(nproc)
          sudo make install
          sudo ldconfig

      - name: Build fast_float
        run: |
          git clone https://github.com/fastfloat/fast_float.git && cd fast_float
          rm _build -rf; mkdir _build -p && cd _build
          cmake .. -DBUILD_SHARED_LIBS=TRUE -DBUILD_BENCHMARKS=OFF
          make -j$(nproc)
          sudo make install
          sudo ldconfig

      - name: Build Folly
        run: |
          git clone https://github.com/facebook/folly.git
          cd folly
          rm _build -rf
          mkdir _build && cd _build
          cmake .. -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DBUILD_BENCHMARKS=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_CXX_STANDARD=20 \
          -DCMAKE_CXX_STANDARD_REQUIRED=ON
          make -j$(nproc)
          sudo make install
          sudo ldconfig


      - name: Build and run demo
        run: |
          echo '#include <folly/FBString.h>' > demo.cpp
          echo 'int main() { folly::fbstring hello("Hello, Folly!"); return 0; }' >> demo.cpp
          # -I/usr/local/include -L/usr/local/lib
          g++ demo.cpp -o demo -lfolly
          ./demo
          